name: Create and publish a Docker image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'The git tag to build an image for (e.g., v1.0.0)'
        required: true
        type: string
  workflow_call:
    inputs:
      tag:
        description: 'The git tag to build an image for (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ${{ vars.REGISTRY || 'ghcr.io' }}
  IMAGE_NAME: ${{ vars.IMAGE_NAME || github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    timeout-minutes: 15

    steps:
      - name: Checkout with specified tag
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.tag }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ github.event.inputs.tag || github.ref_name }}
            type=semver,pattern={{major}}.{{minor}},value=${{ github.event.inputs.tag || github.ref_name }}
            type=semver,pattern={{major}},value=${{ github.event.inputs.tag || github.ref_name }}
            type=ref,event=tag

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ vars.PUSH_IMAGE == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: ${{ vars.PUSH_IMAGE == 'true' }}
